/* Powered by NAIF. Generated by NAIF v.rc2-1.0.0*/
package com.naif.domains.models;

import java.io.Serializable;

import java.util.Date;
import java.util.Set;
import java.util.HashSet;

import java.lang.Override;

import javax.persistence.Table;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Column;
import javax.persistence.JoinColumn;
import javax.persistence.Version;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.CascadeType;
import javax.persistence.FetchType;
import javax.persistence.OrderBy;

import javax.xml.bind.annotation.XmlRootElement;

import com.naif.domains.models.TiposLinksModels;
import com.naif.domains.models.Models;
import com.naif.domains.models.Domains;
import com.naif.domains.models.SystemsModels;
import com.naif.domains.models.Attributes;
import com.naif.domains.models.Relationships;
import com.naif.domains.models.Cardinalities;
import com.naif.domains.models.Entities;
import com.naif.domains.models.NameQueries;

@NamedQueries({
  @NamedQuery(name = "LinksModels.findAll",
              query = "select o from LinksModels o"),

  @NamedQuery(name = "LinksModels.findId",
              query = "select o from LinksModels o where o.id = :id")
})
@XmlRootElement
@Entity
@Table(name = "linksModels", catalog="", schema="")

public class LinksModels implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    private Integer optlock;

    private String titulo;
    private String link;
    private String observacion;
    private double orden;

    // Muchos a Uno Unidireccional No.3:TiposLinksModels
    @ManyToOne(optional=true,
               fetch=FetchType.LAZY, targetEntity=void.class)
    @JoinColumn(name = "idTiposLinksModels", nullable=true, unique=false,
                insertable=true, updatable=true, columnDefinition="",
                referencedColumnName = "id",table="")
    TiposLinksModels tiposLinksModels;

    // Muchos a Uno Unidireccional No.3:Models
    @ManyToOne(optional=true,
               fetch=FetchType.LAZY, targetEntity=void.class)
    @JoinColumn(name = "idModels", nullable=true, unique=false,
                insertable=true, updatable=true, columnDefinition="",
                referencedColumnName = "id",table="")
    Models models;

    // Muchos a Uno Unidireccional No.3:Domains
    @ManyToOne(optional=true,
               fetch=FetchType.LAZY, targetEntity=void.class)
    @JoinColumn(name = "idDomains", nullable=true, unique=false,
                insertable=true, updatable=true, columnDefinition="",
                referencedColumnName = "id",table="")
    Domains domains;

    // Muchos a Uno Unidireccional No.3:SystemsModels
    @ManyToOne(optional=true,
               fetch=FetchType.LAZY, targetEntity=void.class)
    @JoinColumn(name = "idSystemsModels", nullable=true, unique=false,
                insertable=true, updatable=true, columnDefinition="",
                referencedColumnName = "id",table="")
    SystemsModels systemsModels;

    // Muchos a Uno Unidireccional No.3:Attributes
    @ManyToOne(optional=true,
               fetch=FetchType.LAZY, targetEntity=void.class)
    @JoinColumn(name = "idAttributes", nullable=true, unique=false,
                insertable=true, updatable=true, columnDefinition="",
                referencedColumnName = "id",table="")
    Attributes attributes;

    // Muchos a Uno Unidireccional No.3:Relationships
    @ManyToOne(optional=true,
               fetch=FetchType.LAZY, targetEntity=void.class)
    @JoinColumn(name = "idRelationships", nullable=true, unique=false,
                insertable=true, updatable=true, columnDefinition="",
                referencedColumnName = "id",table="")
    Relationships relationships;

    // Muchos a Uno Unidireccional No.3:Cardinalities
    @ManyToOne(optional=true,
               fetch=FetchType.LAZY, targetEntity=void.class)
    @JoinColumn(name = "idCardinalities", nullable=true, unique=false,
                insertable=true, updatable=true, columnDefinition="",
                referencedColumnName = "id",table="")
    Cardinalities cardinalities;

    // Muchos a Uno Unidireccional No.3:Entities
    @ManyToOne(optional=true,
               fetch=FetchType.LAZY, targetEntity=void.class)
    @JoinColumn(name = "idEntities", nullable=true, unique=false,
                insertable=true, updatable=true, columnDefinition="",
                referencedColumnName = "id",table="")
    Entities entities;

    // Muchos a Uno Unidireccional No.3:NameQueries
    @ManyToOne(optional=true,
               fetch=FetchType.LAZY, targetEntity=void.class)
    @JoinColumn(name = "idNameQueries", nullable=true, unique=false,
                insertable=true, updatable=true, columnDefinition="",
                referencedColumnName = "id",table="")
    NameQueries nameQueries;



    @Id
    private @GeneratedValue(strategy = GenerationType.AUTO)
    @Column(name = "id", updatable = false, nullable = false)
    Long id = null;
    public Long getId() {
        return this.id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    @Version
    @Column(name = "optlock", nullable=true, unique=false, length=0, precision=0, columnDefinition="")
    public Integer getOptlock() {
        return this.optlock;
    }

    public void setOptlock(Integer optlock) {
        this.optlock = optlock;
    }

    
    @Column(name = "titulo", nullable=false, unique=false, length=0, precision=0, columnDefinition="")
    public String getTitulo() {
        return titulo;
    }

    public void setTitulo(String titulo) {
        this.titulo = titulo;
    }

    
    @Column(name = "link", nullable=false, unique=false, length=0, precision=0, columnDefinition="")
    public String getLink() {
        return link;
    }

    public void setLink(String link) {
        this.link = link;
    }

    
    @Column(name = "observacion", nullable=true, unique=false, length=0, precision=0, columnDefinition="")
    public String getObservacion() {
        return observacion;
    }

    public void setObservacion(String observacion) {
        this.observacion = observacion;
    }

    @Column(name = "orden", nullable=true, unique=false, length=0, precision=0, columnDefinition="")
    public double getOrden() {
        return this.orden;
    }

    public void setOrden(double orden) {
        this.orden = orden;
    }

// Relaciones
    // Muchos a Uno Unidireccional No.3:TiposLinksModels
    public TiposLinksModels getTiposLinksModels() {
        return this.tiposLinksModels;
    }
    public void setTiposLinksModels(TiposLinksModels tiposLinksModels) {
        this.tiposLinksModels = tiposLinksModels;
    }

    // Muchos a Uno Unidireccional No.3:Models
    public Models getModels() {
        return this.models;
    }
    public void setModels(Models models) {
        this.models = models;
    }

    // Muchos a Uno Unidireccional No.3:Domains
    public Domains getDomains() {
        return this.domains;
    }
    public void setDomains(Domains domains) {
        this.domains = domains;
    }

    // Muchos a Uno Unidireccional No.3:SystemsModels
    public SystemsModels getSystemsModels() {
        return this.systemsModels;
    }
    public void setSystemsModels(SystemsModels systemsModels) {
        this.systemsModels = systemsModels;
    }

    // Muchos a Uno Unidireccional No.3:Attributes
    public Attributes getAttributes() {
        return this.attributes;
    }
    public void setAttributes(Attributes attributes) {
        this.attributes = attributes;
    }

    // Muchos a Uno Unidireccional No.3:Relationships
    public Relationships getRelationships() {
        return this.relationships;
    }
    public void setRelationships(Relationships relationships) {
        this.relationships = relationships;
    }

    // Muchos a Uno Unidireccional No.3:Cardinalities
    public Cardinalities getCardinalities() {
        return this.cardinalities;
    }
    public void setCardinalities(Cardinalities cardinalities) {
        this.cardinalities = cardinalities;
    }

    // Muchos a Uno Unidireccional No.3:Entities
    public Entities getEntities() {
        return this.entities;
    }
    public void setEntities(Entities entities) {
        this.entities = entities;
    }

    // Muchos a Uno Unidireccional No.3:NameQueries
    public NameQueries getNameQueries() {
        return this.nameQueries;
    }
    public void setNameQueries(NameQueries nameQueries) {
        this.nameQueries = nameQueries;
    }


} // Fin de la clase