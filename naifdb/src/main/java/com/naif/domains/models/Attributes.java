/* Powered by NAIF. Generated by NAIF v.rc2-1.0.0*/
package com.naif.domains.models;

import java.io.Serializable;

import java.util.Date;
import java.util.Set;
import java.util.HashSet;

import java.lang.Override;

import javax.persistence.Table;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Column;
import javax.persistence.JoinColumn;
import javax.persistence.Version;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.CascadeType;
import javax.persistence.FetchType;
import javax.persistence.OrderBy;

import javax.xml.bind.annotation.XmlRootElement;

import com.naif.domains.models.Attributes;
import com.naif.domains.models.Attributes;
import com.naif.domains.models.Entities;
import com.naif.domains.models.PropertiesAttributes;
import com.naif.domains.models.LinksModels;
import com.naif.domains.models.TypesAttributes;

@NamedQueries({
  @NamedQuery(name = "Attributes.findAll",
              query = "select o from Attributes o"),

  @NamedQuery(name = "Attributes.findId",
              query = "select o from Attributes o where o.id = :id")
})
@XmlRootElement
@Entity
@Table(name = "attributes", catalog="", schema="")

public class Attributes implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    private Integer optlock;

    private String name;
    private int length;
    private int precision;
    private boolean nullable;
    private boolean unico;
    private String descripcion;
    private String field;
    private String access;
    private String columnDefinition;
    private String annotationsField;
    private String annotationsMethod;
    private String observaciones;
    private double orden;

    // Uno a Muchos Bidireccional No.5:Attributes
    @OneToMany(mappedBy="objPadre",
               fetch=FetchType.LAZY, targetEntity=void.class)
    private Set<Attributes> objHijos = new HashSet<Attributes>(0);

    // Muchos a Uno Unidireccional No.3:Attributes
    @ManyToOne(optional=true,
               fetch=FetchType.LAZY, targetEntity=void.class)
    @JoinColumn(name = "idObjPadre", nullable=true, unique=false,
                insertable=true, updatable=true, columnDefinition="",
                referencedColumnName = "id",table="")
    Attributes objPadre;

    // Muchos a Uno Unidireccional No.3:Entities
    @ManyToOne(optional=true,
               fetch=FetchType.LAZY, targetEntity=void.class)
    @JoinColumn(name = "idEntities", nullable=true, unique=false,
                insertable=true, updatable=true, columnDefinition="",
                referencedColumnName = "id",table="")
    Entities entities;

    // Muchos a Uno Unidireccional No.3:PropertiesAttributes
    @ManyToOne(optional=true,
               fetch=FetchType.LAZY, targetEntity=void.class)
    @JoinColumn(name = "idPropertiesAttributes", nullable=true, unique=false,
                insertable=true, updatable=true, columnDefinition="",
                referencedColumnName = "id",table="")
    PropertiesAttributes propertiesAttributes;

    // Muchos a Uno Unidireccional No.3:LinksModels
    @ManyToOne(optional=true,
               fetch=FetchType.LAZY, targetEntity=void.class)
    @JoinColumn(name = "idLinksModels", nullable=true, unique=false,
                insertable=true, updatable=true, columnDefinition="",
                referencedColumnName = "id",table="")
    LinksModels linksModels;

    // Muchos a Uno Unidireccional No.3:TypesAttributes
    @ManyToOne(optional=true,
               fetch=FetchType.LAZY, targetEntity=void.class)
    @JoinColumn(name = "idTypesAttributes", nullable=true, unique=false,
                insertable=true, updatable=true, columnDefinition="",
                referencedColumnName = "id",table="")
    TypesAttributes typesAttributes;



    @Id
    private @GeneratedValue(strategy = GenerationType.AUTO)
    @Column(name = "id", updatable = false, nullable = false)
    Long id = null;
    public Long getId() {
        return this.id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    @Version
    @Column(name = "optlock", nullable=true, unique=false, length=0, precision=0, columnDefinition="")
    public Integer getOptlock() {
        return this.optlock;
    }

    public void setOptlock(Integer optlock) {
        this.optlock = optlock;
    }

    
    @Column(name = "name", nullable=false, unique=false, length=0, precision=0, columnDefinition="")
    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    
    @Column(name = "length", nullable=true, unique=false, length=0, precision=0, columnDefinition="")
    public int getLength() {
        return length;
    }

    public void setLength(int length) {
        this.length = length;
    }

    
    @Column(name = "precision", nullable=true, unique=false, length=0, precision=0, columnDefinition="")
    public int getPrecision() {
        return precision;
    }

    public void setPrecision(int precision) {
        this.precision = precision;
    }

    
    @Column(name = "nullable", nullable=true, unique=false, length=0, precision=0, columnDefinition="")
    public boolean getNullable() {
        return nullable;
    }

    public void setNullable(boolean nullable) {
        this.nullable = nullable;
    }

    
    @Column(name = "unico", nullable=true, unique=false, length=0, precision=0, columnDefinition="")
    public boolean getUnico() {
        return unico;
    }

    public void setUnico(boolean unico) {
        this.unico = unico;
    }

    
    @Column(name = "descripcion", nullable=true, unique=false, length=0, precision=0, columnDefinition="")
    public String getDescripcion() {
        return descripcion;
    }

    public void setDescripcion(String descripcion) {
        this.descripcion = descripcion;
    }

    
    @Column(name = "field", nullable=true, unique=false, length=0, precision=0, columnDefinition="")
    public String getField() {
        return field;
    }

    public void setField(String field) {
        this.field = field;
    }

    
    @Column(name = "access", nullable=true, unique=false, length=0, precision=0, columnDefinition="")
    public String getAccess() {
        return access;
    }

    public void setAccess(String access) {
        this.access = access;
    }

    
    @Column(name = "columnDefinition", nullable=true, unique=false, length=0, precision=0, columnDefinition="")
    public String getColumnDefinition() {
        return columnDefinition;
    }

    public void setColumnDefinition(String columnDefinition) {
        this.columnDefinition = columnDefinition;
    }

    
    @Column(name = "annotationsField", nullable=true, unique=false, length=0, precision=0, columnDefinition="")
    public String getAnnotationsField() {
        return annotationsField;
    }

    public void setAnnotationsField(String annotationsField) {
        this.annotationsField = annotationsField;
    }

    
    @Column(name = "annotationsMethod", nullable=true, unique=false, length=0, precision=0, columnDefinition="")
    public String getAnnotationsMethod() {
        return annotationsMethod;
    }

    public void setAnnotationsMethod(String annotationsMethod) {
        this.annotationsMethod = annotationsMethod;
    }

    
    @Column(name = "observaciones", nullable=true, unique=false, length=0, precision=0, columnDefinition="")
    public String getObservaciones() {
        return observaciones;
    }

    public void setObservaciones(String observaciones) {
        this.observaciones = observaciones;
    }

    @Column(name = "orden", nullable=true, unique=false, length=0, precision=0, columnDefinition="")
    public double getOrden() {
        return this.orden;
    }

    public void setOrden(double orden) {
        this.orden = orden;
    }

// Relaciones
    // Uno a Muchos Bidireccional No.5:Attributes
    public Set<Attributes> getObjHijos() {
        return this.objHijos;
    }
    public void setObjHijos(Set<Attributes> objHijos) {
        this.objHijos = objHijos;
    }

    // Muchos a Uno Unidireccional No.3:Attributes
    public Attributes getObjPadre() {
        return this.objPadre;
    }
    public void setObjPadre(Attributes objPadre) {
        this.objPadre = objPadre;
    }

    // Muchos a Uno Unidireccional No.3:Entities
    public Entities getEntities() {
        return this.entities;
    }
    public void setEntities(Entities entities) {
        this.entities = entities;
    }

    // Muchos a Uno Unidireccional No.3:PropertiesAttributes
    public PropertiesAttributes getPropertiesAttributes() {
        return this.propertiesAttributes;
    }
    public void setPropertiesAttributes(PropertiesAttributes propertiesAttributes) {
        this.propertiesAttributes = propertiesAttributes;
    }

    // Muchos a Uno Unidireccional No.3:LinksModels
    public LinksModels getLinksModels() {
        return this.linksModels;
    }
    public void setLinksModels(LinksModels linksModels) {
        this.linksModels = linksModels;
    }

    // Muchos a Uno Unidireccional No.3:TypesAttributes
    public TypesAttributes getTypesAttributes() {
        return this.typesAttributes;
    }
    public void setTypesAttributes(TypesAttributes typesAttributes) {
        this.typesAttributes = typesAttributes;
    }


} // Fin de la clase