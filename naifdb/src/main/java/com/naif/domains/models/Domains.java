/* Powered by NAIF. Generated by NAIF v.rc2-1.0.0*/
package com.naif.domains.models;

import java.io.Serializable;

import java.util.Date;
import java.util.Set;
import java.util.HashSet;

import java.lang.Override;

import javax.persistence.Table;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Column;
import javax.persistence.JoinColumn;
import javax.persistence.Version;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.CascadeType;
import javax.persistence.FetchType;
import javax.persistence.OrderBy;

import javax.xml.bind.annotation.XmlRootElement;

import com.naif.domains.models.SystemsModels;
import com.naif.domains.models.Models;
import com.naif.domains.models.LinksModels;

import org.hibernate.search.annotations.Analyze;
import org.hibernate.search.annotations.DocumentId;
import org.hibernate.search.annotations.Field;
import org.hibernate.search.annotations.Index;
import org.hibernate.search.annotations.Indexed;
import org.hibernate.search.annotations.IndexedEmbedded;
import org.hibernate.search.annotations.NumericField;
import org.hibernate.search.annotations.Store;


@NamedQueries({
  @NamedQuery(name = "Domains.findAll",
              query = "select o from Domains o"),

  @NamedQuery(name = "Domains.findId",
              query = "select o from Domains o where o.id = :id")
})
@Indexed
@XmlRootElement
@Entity
@Table(name = "domains", catalog="", schema="")

public class Domains implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    private Integer optlock;

    private String name;
    private String codigo;
    private String release;
    private Date fecha;
    private String description;
    private double orden;

    // Muchos a Uno Unidireccional No.3:SystemsModels
    @IndexedEmbedded
    @ManyToOne(optional=true,
               fetch=FetchType.LAZY, targetEntity=void.class)
    @JoinColumn(name = "idSystemsModels", nullable=true, unique=false,
                insertable=true, updatable=true, columnDefinition="",
                referencedColumnName = "id",table="")
    SystemsModels systemsModels;

    // Uno a Muchos Bidireccional No.5:Models
    @OneToMany(mappedBy="domains",
               fetch=FetchType.LAZY, targetEntity=void.class)
    private Set<Models> models = new HashSet<Models>(0);

    // Uno a Muchos Bidireccional No.5:LinksModels
    @OneToMany(mappedBy="domains",
               fetch=FetchType.LAZY, targetEntity=void.class)
    private Set<LinksModels> linksModels = new HashSet<LinksModels>(0);



    @Id
    private @GeneratedValue(strategy = GenerationType.AUTO)
    @Column(name = "id", updatable = false, nullable = false)
    Long id = null;
    public Long getId() {
        return this.id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    @Version
    @Column(name = "optlock", nullable=true, unique=false, length=0, precision=0, columnDefinition="")
    public Integer getOptlock() {
        return this.optlock;
    }

    public void setOptlock(Integer optlock) {
        this.optlock = optlock;
    }

    @Field(index = Index.YES, analyze = Analyze.YES, store = Store.NO)
    @Column(name = "name", nullable=false, unique=true, length=0, precision=0, columnDefinition="")
    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }


    @Column(name = "codigo", nullable=true, unique=false, length=0, precision=0, columnDefinition="")
    public String getCodigo() {
        return codigo;
    }

    public void setCodigo(String codigo) {
        this.codigo = codigo;
    }


    @Column(name = "release", nullable=true, unique=false, length=0, precision=0, columnDefinition="")
    public String getRelease() {
        return release;
    }

    public void setRelease(String release) {
        this.release = release;
    }


    @Column(name = "fecha", nullable=true, unique=false, length=0, precision=0, columnDefinition="")
    public Date getFecha() {
        return fecha;
    }

    public void setFecha(Date fecha) {
        this.fecha = fecha;
    }


    @Column(name = "description", nullable=true, unique=false, length=0, precision=0, columnDefinition="")
    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    @Field(index = Index.YES, analyze = Analyze.NO, store = Store.NO)
    @NumericField    
    @Column(name = "orden", nullable=true, unique=false, length=0, precision=0, columnDefinition="")
    public double getOrden() {
        return this.orden;
    }

    public void setOrden(double orden) {
        this.orden = orden;
    }

// Relaciones
    // Muchos a Uno Unidireccional No.3:SystemsModels
    public SystemsModels getSystemsModels() {
        return this.systemsModels;
    }
    public void setSystemsModels(SystemsModels systemsModels) {
        this.systemsModels = systemsModels;
    }

    // Uno a Muchos Bidireccional No.5:Models
    public Set<Models> getModels() {
        return this.models;
    }
    public void setModels(Set<Models> models) {
        this.models = models;
    }

    // Uno a Muchos Bidireccional No.5:LinksModels
    public Set<LinksModels> getLinksModels() {
        return this.linksModels;
    }
    public void setLinksModels(Set<LinksModels> linksModels) {
        this.linksModels = linksModels;
    }


} // Fin de la clase